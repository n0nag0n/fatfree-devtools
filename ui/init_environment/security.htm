<h1>A few notes about Security</h1>
<p>While these are not enforced in the framework they are really good for you to be aware of.</p>
<h2>SQL Injection</h2>
<p>SQL Injection is a very common attack against your website. There are so many diverse ways it can happen but there is a very simple way to stop it: use prepared statements. Here is a bad example of SQL which is ripe for SQL injection.</p>
<pre><code class="lang-php">$db_connection->exec("SELECT * FROM some_table WHERE id = '{$some_variable}'");
</code></pre>
<p>Does this work? Yes. Does this protect you? Heavens no! Using prepared statements is a simple transition that will protect you from SQL injection.</p>
<pre><code class="lang-php">$db_connection->exec("SELECT * FROM some_table WHERE id = ?", [ $some_variable ]);
</code></pre>
<h2>Scrubing Data</h2>
<p>There are plenty of examples of bad data or malicious data being submitted on a form. To mitigate this, when you are processing information from a <code>$_GET</code> or <code>$_POST</code> variable, you should clean it before you store it in your database.</p>
<pre><code class="lang-php">$post = $fw->clean($fw->POST);

// If you use the XSS filter from https://github.com/n0nag0n/fatfree-xss-filter
$post = Xss_Filter::filter('POST');
</code></pre>
<h2>HTTPS</h2>
<p>Please make sure to use HTTPS on your website <b>even if there is no sensitive data</b>. This is also good for SEO. LetsEncrypt offers free SSL certificates via <a href="https://certbot.eff.org/" title="LetsEncrypt Certbot">Certbot</a>.</p>

<h2>Templating</h2>
<p>There are 2 templating engines built into Fat-Free. <a href="https://fatfreeframework.com/view" title="View Raw PHP Templating Engine">View</a> and <a href="https://fatfreeframework.com/template" title="Templating Engine">Template</a>. The built in templating engines should suffice, however there are other alternatives such as <a href="https://twig.symfony.com/" title="Twig Templating Engine" target="_blank">Twig</a>, <a href="https://www.smarty.net/" title="Smarty Templating Engine" target="_blank">Smarty</a> and <a href="https://latte.nette.org" title="Latte Templating Engine" target="_blank">Latte</a></p>
<p>The reason behind using a templating engine is to protect from XSS attacks: a malicious user saves a form with some bad javascript and starts attacking any user where that form element may be output. It will save you a lot of heartache if you even use the View templating engine which is a simple PHP wrapper.</p>

<h3>I understand and am ready to proceed.</h3>
<a href="/init-environment/choose-database" class="btn btn-primary mb-5">Back</a>
<a href="/init-environment/build" class="btn btn-primary mb-5">Build Environment!</a>
